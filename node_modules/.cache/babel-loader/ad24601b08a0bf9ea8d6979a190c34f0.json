{"ast":null,"code":"import _slicedToArray from \"C:\\\\Windows\\\\System32\\\\TodoList\\\\listinha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Windows\\\\System32\\\\TodoList\\\\listinha\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  var _useState = useState(props.edit ? props.edit.value : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    inputRef.current.focus();\n  });\n\n  var handleChange = function handleChange(e) {\n    setInput(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Update your item\",\n    value: input,\n    name: \"text\",\n    className: \"todo-input edit\",\n    onChange: handleChange,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"todo-button edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add a todo\",\n    value: input,\n    name: \"text\",\n    className: \"todo-input\",\n    onChange: handleChange,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Add todo\")));\n}\n\nexport default TodoForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["C:/Windows/System32/TodoList/listinha/src/components/TodoForm.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\nconst inputRef = useRef(null)\r\n\r\nuseEffect(() => {\r\n  inputRef.current.focus()\r\n})\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value);\r\n};\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input\r\n    });\r\n\r\n    setInput('');\r\n};\r\n\r\n  return (\r\n    <form className='todo-form' onSubmit={handleSubmit}>\r\n        {props.edit ? ( \r\n        <>\r\n          <input \r\n            type='text'\r\n            placeholder= 'Update your item'\r\n            value={input}\r\n            name='text'\r\n            className='todo-input edit'\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className='todo-button edit'>Update</button>\r\n        </>\r\n        ) : ( \r\n        <>\r\n          <input \r\n            type='text'\r\n            placeholder= 'Add a todo'\r\n            value={input}\r\n            name='text'\r\n            className='todo-input'\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className='todo-button'>Add todo</button>\r\n        </>\r\n        )}\r\n\r\n        \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA,gBACCJ,QAAQ,CAACI,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CADT;EAAA;EAAA,IAClBC,KADkB;EAAA,IACXC,QADW;;EAGzB,IAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;EAEAD,SAAS,CAAC,YAAM;IACdQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;EACD,CAFQ,CAAT;;EAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;IACtBL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;EACH,CAFD;;EAIA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAAAF,CAAC,EAAI;IACtBA,CAAC,CAACG,cAAF;IAEAZ,KAAK,CAACa,QAAN,CAAe;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;MAEXC,IAAI,EAAEf;IAFK,CAAf;IAKAC,QAAQ,CAAC,EAAD,CAAR;EACH,CATD;;EAWE,oBACE;IAAM,SAAS,EAAC,WAAhB;IAA4B,QAAQ,EAAEO,YAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKX,KAAK,CAACC,IAAN,gBACD,uDACE;IACE,IAAI,EAAC,MADP;IAEE,WAAW,EAAE,kBAFf;IAGE,KAAK,EAAEE,KAHT;IAIE,IAAI,EAAC,MAJP;IAKE,SAAS,EAAC,iBALZ;IAME,QAAQ,EAAEK,YANZ;IAOE,GAAG,EAAEH,QAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAUE;IAAQ,SAAS,EAAC,kBAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAVF,CADC,gBAcD,uDACE;IACE,IAAI,EAAC,MADP;IAEE,WAAW,EAAE,YAFf;IAGE,KAAK,EAAEF,KAHT;IAIE,IAAI,EAAC,MAJP;IAKE,SAAS,EAAC,YALZ;IAME,QAAQ,EAAEK,YANZ;IAOE,GAAG,EAAEH,QAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAUE;IAAQ,SAAS,EAAC,aAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAVF,CAfJ,CADF;AAiCD;;AAED,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}