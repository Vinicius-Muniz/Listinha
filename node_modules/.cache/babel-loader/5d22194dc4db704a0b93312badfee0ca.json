{"ast":null,"code":"import _slicedToArray from \"C:\\\\Windows\\\\System32\\\\TodoList\\\\listinha\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Windows\\\\System32\\\\TodoList\\\\listinha\\\\src\\\\components\\\\Todo.js\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo(_ref) {\n  var _this = this;\n\n  var todos = _ref.todos,\n      completeTodo = _ref.completeTodo,\n      removeTodo = _ref.removeTodo,\n      updateTodo = _ref.updateTodo;\n\n  var _useState = useState({\n    id: null,\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var submitUpdate = function submitUpdate(value) {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return todos.map(function (todo, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: todo.id,\n      onClick: function onClick() {\n        return completeTodo(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n      onClick: function onClick() {\n        return removeTodo(todo.id);\n      },\n      className: \"delete-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TiEdit, {\n      onClick: function onClick() {\n        return setEdit({\n          id: todo.id,\n          value: todo.text\n        });\n      },\n      className: \"edit-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\nexport default Todo;","map":{"version":3,"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"sources":["C:/Windows/System32/TodoList/listinha/src/components/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' :'todo-row'}\r\n     key={index}\r\n    >\r\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n            <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className='delete-icon'\r\n            />\r\n            <TiEdit \r\n            onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n            className='edit-icon'\r\n            />\r\n        </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;AAEA,SAASC,IAAT,OAA8D;EAAA;;EAAA,IAA9CC,KAA8C,QAA9CA,KAA8C;EAAA,IAAvCC,YAAuC,QAAvCA,YAAuC;EAAA,IAAzBC,UAAyB,QAAzBA,UAAyB;EAAA,IAAbC,UAAa,QAAbA,UAAa;;EAAA,gBAClCR,QAAQ,CAAC;IAC7BS,EAAE,EAAE,IADyB;IAE7BC,KAAK,EAAE;EAFsB,CAAD,CAD0B;EAAA;EAAA,IACnDC,IADmD;EAAA,IAC7CC,OAD6C;;EAM1D,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAH,KAAK,EAAI;IAC1BF,UAAU,CAACG,IAAI,CAACF,EAAN,EAAUC,KAAV,CAAV;IACAE,OAAO,CAAC;MACJH,EAAE,EAAE,IADA;MAEJC,KAAK,EAAE;IAFH,CAAD,CAAP;EAIH,CAND;;EAQA,IAAIC,IAAI,CAACF,EAAT,EAAa;IACT,oBAAO,oBAAC,QAAD;MAAU,IAAI,EAAEE,IAAhB;MAAsB,QAAQ,EAAEE,YAAhC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACH;;EAEH,OAAOR,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;IAAA,oBACf;MAAK,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAuC,UAAvD;MACC,GAAG,EAAED,KADN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAGI;MAAK,GAAG,EAAED,IAAI,CAACN,EAAf;MAAmB,OAAO,EAAE;QAAA,OAAMH,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB;MAAA,CAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACKM,IAAI,CAACG,IADV,CAHJ,eAMI;MAAK,SAAS,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,iBAAD;MACA,OAAO,EAAE;QAAA,OAAMX,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB;MAAA,CADT;MAEA,SAAS,EAAC,aAFV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,eAKI,oBAAC,MAAD;MACA,OAAO,EAAE;QAAA,OAAMG,OAAO,CAAC;UAAEH,EAAE,EAAEM,IAAI,CAACN,EAAX;UAAeC,KAAK,EAAEK,IAAI,CAACG;QAA3B,CAAD,CAAb;MAAA,CADT;MAEA,SAAS,EAAC,WAFV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EALJ,CANJ,CADe;EAAA,CAAV,CAAP;AAmBD;;AAED,eAAed,IAAf"},"metadata":{},"sourceType":"module"}